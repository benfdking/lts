FROM golang:1.25-alpine AS builder

WORKDIR /app

# Copy go mod files
COPY go.mod go.sum ./
RUN go mod download

# Copy source code
COPY . .

# Build the binary
RUN CGO_ENABLED=0 GOOS=linux go build -o lts main.go

# Final stage
FROM alpine:latest

# Install dependencies for asciinema and expect
RUN apk add --no-cache \
    bash \
    ca-certificates \
    curl \
    zsh \
    expect \
    asciinema \
    cargo \
    rust \
    font-dejavu \
    font-liberation \
    font-noto

# Install agg (asciinema to gif converter)
RUN cargo install --git https://github.com/asciinema/agg

# Copy the built binary
COPY --from=builder /app/lts /usr/local/bin/lts-bin

# Create a wrapper script for lts that works in VHS/demo context
RUN echo '#!/bin/sh' > /usr/local/bin/lts && \
    echo 'lts-bin "$@"' >> /usr/local/bin/lts && \
    chmod +x /usr/local/bin/lts

# Copy the zsh script
RUN mkdir -p /usr/local/share/lts
COPY ./scripts/lts.zsh /usr/local/share/lts/lts.zsh

# Set up zsh to source lts.zsh at startup for interactive use
RUN echo 'source /usr/local/share/lts/lts.zsh' >> /root/.zshrc

# Create working directory
WORKDIR /demo

# Copy demo files
COPY demo.exp .
COPY record-demo.sh .
COPY .lts.json.demo /root/.lts.json

# Make scripts executable
RUN chmod +x /demo/demo.exp /demo/record-demo.sh

CMD ["zsh"]
